Application Plan:
------------------------------------------------------------------
AppComponent => Root Component

ng g c dash-board --standalone=false
DashBoard => nested in AppComponent

ng g c home --standalone=false
http://localhost:4200/home 						=> HomeComponent
http://localhost:4200		 						=> http://localhost:4200/home

ng g c view-not-found --standalone=false
http://localhost:4200/<anything-else>		 	=> ViewNotFoundComponent

products fetaure module:
-------------------------------------------------------------------------------
http://localhost:4200/products 					=> ProductContainerComponent

ng g c products/components/view-product --standalone=false
http://localhost:4200/products/view/:id 	=> ViewProductComponent

ng g c products/components/update-product --standalone=false
http://localhost:4200/products/update/:id	=> UpdateProductComponent

ng g c products/components/add-product --standalone=false
http://localhost:4200/products/add			 	=> AddProductComponent


'' => http://localhost:4200/products or http://localhost:4200/

Route Matching Strategy:
1. prefix (Default)
2. full

Routing:
--------------------------------------
client-side routing

package: @angular/router
module: RouterModule

services:
-------------------------
Router => router engine
ActivatedRoute => stores the complete navigation information about the current route that is "activated", i.e. being visited. it is a built-in service class.
RouterState => represents current state of the router, i.e. its a collection or tree of ActivatedRoute service class objects


directives:
-------------------------------
<router-outlet> => component directive (placeholder for a component to be loaded dynamically when the corresponding route is visited)

routerLink => an attribute directive, which helps you navigate to a client-side route, without reloading the page/application
routerLink value => a string path or an array of path fragments

example:
routerLink='/products'
routerLink="['/products','add']" => routerLink starts building the URL from the supplied path fragments by appending values in the base url from left to right


class: (type)
--------------------------------
Route => path (products or home), component (PCC or Home)
Routes => Route[]
ActivatedRouteSnapshot => current state of the route that is being navigated

route array has to be registered with router engine (via RouterModule)
RouterModule.forRoot(array of routes)/forChild()

where to write routing configuration?
----------------------------------------------
1. create routes of fetaure modules in the feature module class file itself
or 
2. separate routing module file for every feature module






